from django.core.management.base import BaseCommand
from django.core.management import call_command
from django.db import transaction
import os


class Command(BaseCommand):
    help = 'Load demo data fixtures for Circle platform'

    def add_arguments(self, parser):
        parser.add_argument(
            '--clear',
            action='store_true',
            help='Clear existing data before loading fixtures',
        )

    def handle(self, *args, **options):
        """
        –ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ demo –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ:
        1. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (—Å—Ñ–µ—Ä—ã, —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏)
        2. –ê–≥–µ–Ω—Ç—Å—Ç–≤–∞
        3. –¢—É—Ä—ã (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —Ç—É—Ä—ã, —Å–µ—Å—Å–∏–∏)
        4. –ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ –∞–∫—Ü–∏–∏
        5. –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        6. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
        """
        
        if options['clear']:
            self.stdout.write(
                self.style.WARNING('‚ö†Ô∏è  Clearing existing data...')
            )
            # –í –ø—Ä–æ–¥–∞–∫—à–Ω–µ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
            self.clear_data()
        
        self.stdout.write(
            self.style.HTTP_INFO('üöÄ Loading Circle demo data...')
        )
        
        # –ü–æ—Ä—è–¥–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∞–∂–µ–Ω –∏–∑-–∑–∞ FK –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        fixtures = [
            ('users_data.json', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, —Å—Ñ–µ—Ä—ã –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏'),
            ('agencies_data.json', '–¢—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞'), 
            ('tours_data.json', '–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—É—Ä–æ–≤ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã'),
            ('tours_full_data.json', '–¢—É—Ä—ã, —Å–µ—Å—Å–∏–∏ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è'),
            ('promotions_data.json', '–ü—Ä–æ–º–æ–∫–æ–¥—ã –∏ –∞–∫—Ü–∏–∏'),
            ('bookings_data.json', '–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è'),
        ]
        
        try:
            with transaction.atomic():
                for fixture_file, description in fixtures:
                    self.stdout.write(f'üìÇ –ó–∞–≥—Ä—É–∂–∞—é {description}...')
                    
                    # –ò—â–µ–º fixture –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
                    fixture_path = self.find_fixture(fixture_file)
                    if fixture_path:
                        call_command('loaddata', fixture_path, verbosity=0)
                        self.stdout.write(
                            self.style.SUCCESS(f'   ‚úÖ {description} –∑–∞–≥—Ä—É–∂–µ–Ω—ã')
                        )
                    else:
                        self.stdout.write(
                            self.style.WARNING(f'   ‚ö†Ô∏è  Fixture {fixture_file} –Ω–µ –Ω–∞–π–¥–µ–Ω')
                        )
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤—è–∑–∏
                self.create_connections()
                
                self.stdout.write('\n' + '='*50)
                self.stdout.write(
                    self.style.SUCCESS('üéâ –í—Å–µ demo –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')
                )
                self.stdout.write('üìä –ß—Ç–æ —Å–æ–∑–¥–∞–Ω–æ:')
                self.stdout.write('   ‚Ä¢ 5 —Å—Ñ–µ—Ä –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏')
                self.stdout.write('   ‚Ä¢ 5 —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π')
                self.stdout.write('   ‚Ä¢ 4 —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è + –∞–¥–º–∏–Ω')
                self.stdout.write('   ‚Ä¢ 3 —Ç—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞')
                self.stdout.write('   ‚Ä¢ 5 –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç—É—Ä–æ–≤')
                self.stdout.write('   ‚Ä¢ 5 —Ç—É—Ä–æ–≤ —Å 7 —Å–µ—Å—Å–∏—è–º–∏')
                self.stdout.write('   ‚Ä¢ 2 –∞–∫—Ü–∏–∏ –∏ 3 –ø—Ä–æ–º–æ–∫–æ–¥–∞')
                self.stdout.write('   ‚Ä¢ 6 –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–∞—Ö')
                self.stdout.write('\nüîó –ê–¥–º–∏–Ω–∫–∞: http://127.0.0.1:8000/admin/')
                self.stdout.write('üîë Login: phoenix | Password: 18569874')
                self.stdout.write('='*50)
                        
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}')
            )
            raise

    def find_fixture(self, filename):
        """–ò—â–µ—Ç fixture —Ñ–∞–π–ª –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"""
        apps = ['users', 'agencies', 'tours', 'bookings']
        
        for app in apps:
            fixture_path = f'apps/{app}/fixtures/{filename}'
            if os.path.exists(fixture_path):
                return fixture_path
        return None

    def create_connections(self):
        """–°–æ–∑–¥–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ —Ç—É—Ä–∞–º–∏"""
        from apps.users.models import User
        from apps.tours.models import Tour
        
        self.stdout.write('üîó –°–æ–∑–¥–∞—é —Å–≤—è–∑–∏ –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...')
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            aidar = User.objects.get(username='aidar_dev')
            malika = User.objects.get(username='malika_designer')
            jamshid = User.objects.get(username='jamshid_doctor')
            nodira = User.objects.get(username='nodira_teacher')
            
            # –°–æ–∑–¥–∞–µ–º connections (–¥—Ä—É–∑—å—è)
            aidar.connections.add(malika, jamshid)
            malika.connections.add(nodira)
            jamshid.connections.add(nodira)
            
            # –î–æ–±–∞–≤–ª—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∫ —Ç—É—Ä–∞–º
            chimgan_tour = Tour.objects.get(slug='chimgan-peak-hiking')
            samarkand_tour = Tour.objects.get(slug='samarkand-heritage-tour')
            aydarkul_tour = Tour.objects.get(slug='aydarkul-lake-camp')
            
            chimgan_tour.participants.add(aidar, jamshid)
            samarkand_tour.participants.add(malika, nodira)
            aydarkul_tour.participants.add(aidar, malika)
            
            self.stdout.write(
                self.style.SUCCESS('   ‚úÖ –°–≤—è–∑–∏ —Å–æ–∑–¥–∞–Ω—ã')
            )
            
        except Exception as e:
            self.stdout.write(
                self.style.WARNING(f'   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–≤—è–∑–µ–π: {e}')
            )

    def clear_data(self):
        """–û—á–∏—â–∞–µ—Ç demo –¥–∞–Ω–Ω—ã–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"""
        from django.apps import apps
        
        # –ú–æ–¥–µ–ª–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        models_to_clear = [
            'bookings.Booking',
            'tours.PromoCode', 
            'tours.Promotion',
            'tours.TourParameterValue',
            'tours.TourSchedule',
            'tours.TourSession',
            'tours.Tour',
            'tours.TourParameterDefinition',
            'tours.TourCategory',
            'agencies.TravelAgency',
            'users.User',  # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            'users.Specialization',
            'users.Sphere',
        ]
        
        for model_path in models_to_clear:
            try:
                app_label, model_name = model_path.split('.')
                model = apps.get_model(app_label, model_name)
                
                if model_name == 'User':
                    # –£–¥–∞–ª—è–µ–º –≤—Å–µ—Ö –∫—Ä–æ–º–µ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    model.objects.filter(is_superuser=False).delete()
                else:
                    model.objects.all().delete()
                    
            except Exception as e:
                self.stdout.write(
                    self.style.WARNING(f'–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å {model_path}: {e}')
                ) 