#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö API endpoints Circle
"""

import requests
import json
from datetime import datetime

BASE_URL = "http://127.0.0.1:8000/api/v1"

def test_endpoint(endpoint, description):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API endpoint"""
    url = f"{BASE_URL}{endpoint}"
    try:
        response = requests.get(url, timeout=5)
        status = "‚úÖ" if response.status_code == 200 else "‚ùå"
        print(f"{status} {description}")
        print(f"   URL: {url}")
        print(f"   Status: {response.status_code}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                if isinstance(data, dict):
                    if 'results' in data:
                        print(f"   Count: {data.get('count', 'N/A')}")
                    elif 'id' in data:
                        print(f"   ID: {data['id']}")
                elif isinstance(data, list):
                    print(f"   Items: {len(data)}")
            except:
                print(f"   Response length: {len(response.text)} chars")
        else:
            print(f"   Error: {response.text[:100]}")
        print()
        return response.status_code == 200
    except Exception as e:
        print(f"‚ùå {description}")
        print(f"   URL: {url}")
        print(f"   Error: {e}")
        print()
        return False

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Circle API endpoints")
    print("=" * 50)
    print(f"–í—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()

    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    endpoints = [
        # Users
        ("/users/spheres/", "üë• –°—Ñ–µ—Ä—ã –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"),
        ("/users/specializations/", "üíº –°–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏"),
        
        # Tours  
        ("/tours/tours/", "üó∫Ô∏è –°–ø–∏—Å–æ–∫ —Ç—É—Ä–æ–≤"),
        ("/tours/categories/", "üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—É—Ä–æ–≤"),
        ("/tours/tours/1/", "üéØ –î–µ—Ç–∞–ª–∏ —Ç—É—Ä–∞ #1"),
        
        # Agencies
        ("/agencies/agencies/", "üè¢ –¢—É—Ä–∞–≥–µ–Ω—Ç—Å—Ç–≤–∞"),
        
        # Media
        ("/media/media/", "üì∏ –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã"),
        
        # Bookings (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        # ("/bookings/bookings/", "üìã –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è"),
        
        # Payments (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        # ("/payments/transactions/", "üí≥ –ü–ª–∞—Ç–µ–∂–∏"),
        
        # Referrals (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
        # ("/referrals/partners/", "ü§ù –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–µ –ø–∞—Ä—Ç–Ω–µ—Ä—ã"),
        
        # Core (—Ç—Ä–µ–±—É–µ—Ç admin –ø—Ä–∞–≤)
        # ("/core/configs/", "‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"),
    ]

    success_count = 0
    total_count = len(endpoints)

    for endpoint, description in endpoints:
        if test_endpoint(endpoint, description):
            success_count += 1

    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"   –£—Å–ø–µ—à–Ω–æ: {success_count}/{total_count}")
    print(f"   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {success_count/total_count*100:.1f}%")
    
    if success_count == total_count:
        print("\nüéâ –í—Å–µ API endpoints —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print(f"\n‚ö†Ô∏è {total_count - success_count} endpoints —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è")

    print("\nüîó –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:")
    print("   ‚Ä¢ Django Admin: http://127.0.0.1:8000/admin/")
    print("   ‚Ä¢ API Documentation: http://127.0.0.1:8000/swagger/")
    print("   ‚Ä¢ Tours API: http://127.0.0.1:8000/api/v1/tours/tours/")
    print("   ‚Ä¢ Spheres API: http://127.0.0.1:8000/api/v1/users/spheres/")

if __name__ == "__main__":
    main() 