'use client';

import React, { useState, useEffect } from 'react';

export default function DebugPage() {
  const [apiStatus, setApiStatus] = useState<'loading' | 'success' | 'error'>('loading');
  const [apiResponse, setApiResponse] = useState<any>(null);
  const [apiError, setApiError] = useState<string | null>(null);

  const API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://127.0.0.1:8001/api/v1';

  useEffect(() => {
    checkApiStatus();
  }, []);

  const checkApiStatus = async () => {
    setApiStatus('loading');
    setApiError(null);
    setApiResponse(null);

    try {
      console.log('–ü—Ä–æ–≤–µ—Ä—è–µ–º API:', API_BASE_URL);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º health check
      const healthResponse = await fetch(`${API_BASE_URL}/`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      if (healthResponse.ok) {
        const healthData = await healthResponse.json();
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º Telegram auth endpoint
        const telegramResponse = await fetch(`${API_BASE_URL}/auth/telegram/`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ init_data: 'test' }) // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        });
        
        const result = {
          health_check: healthData,
          telegram_auth_available: telegramResponse.status !== 404,
          telegram_status: telegramResponse.status,
          telegram_error: telegramResponse.status >= 400 ? await telegramResponse.text() : null
        };
        
        setApiResponse(result);
        setApiStatus('success');
      } else {
        setApiError(`HTTP ${healthResponse.status}: ${healthResponse.statusText}`);
        setApiStatus('error');
      }
    } catch (error: any) {
      console.error('API Error:', error);
      setApiError(error.message || 'Network error');
      setApiStatus('error');
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 py-8 px-4">
      <div className="max-w-2xl mx-auto">
        <div className="bg-white rounded-lg shadow-md p-6">
          <h1 className="text-2xl font-bold text-gray-900 mb-6">üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Circle</h1>
          
          {/* API —Å—Ç–∞—Ç—É—Å */}
          <div className="mb-6">
            <h2 className="text-lg font-semibold text-gray-800 mb-4">Backend API —Å—Ç–∞—Ç—É—Å</h2>
            
            <div className="bg-gray-50 rounded-lg p-4 mb-4">
              <p className="text-sm font-medium text-gray-700 mb-1">API URL:</p>
              <code className="text-sm bg-gray-200 px-2 py-1 rounded">{API_BASE_URL}</code>
            </div>

            <div className="flex items-center space-x-2 mb-4">
              <div className={`w-3 h-3 rounded-full ${
                apiStatus === 'loading' ? 'bg-yellow-400 animate-pulse' :
                apiStatus === 'success' ? 'bg-green-400' : 'bg-red-400'
              }`}></div>
              <span className="font-medium">
                {apiStatus === 'loading' ? '–ü—Ä–æ–≤–µ—Ä—è–µ–º...' :
                 apiStatus === 'success' ? '–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ ‚úÖ' : '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è ‚ùå'}
              </span>
            </div>

            {apiStatus === 'success' && apiResponse && (
              <div className="bg-green-50 border border-green-200 rounded-lg p-4">
                <h3 className="font-medium text-green-800 mb-2">–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:</h3>
                <pre className="text-sm text-green-700 overflow-auto">
                  {JSON.stringify(apiResponse, null, 2)}
                </pre>
              </div>
            )}

            {apiStatus === 'error' && (
              <div className="bg-red-50 border border-red-200 rounded-lg p-4">
                <h3 className="font-medium text-red-800 mb-2">–û—à–∏–±–∫–∞:</h3>
                <p className="text-sm text-red-700">{apiError}</p>
                
                <div className="mt-4 text-sm text-red-600">
                  <p className="font-medium mb-2">–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:</p>
                  <ul className="list-disc list-inside space-y-1">
                    <li>Backend —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω</li>
                    <li>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –∏–ª–∏ –ø–æ—Ä—Ç</li>
                    <li>CORS –æ—à–∏–±–∫–∏</li>
                    <li>–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é</li>
                  </ul>
                </div>
              </div>
            )}

            <button
              onClick={checkApiStatus}
              className="mt-4 bg-blue-500 hover:bg-blue-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors"
            >
              üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>

          {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
          <div className="border-t pt-6">
            <h2 className="text-lg font-semibold text-gray-800 mb-4">üìñ –ö–∞–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—å backend</h2>
            
                         <div className="bg-gray-50 rounded-lg p-4 space-y-3">
               <div>
                 <p className="font-medium text-gray-700 mb-1">1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É backend:</p>
                 <code className="text-sm bg-gray-200 px-2 py-1 rounded block">cd circle-backend</code>
               </div>
               
               <div>
                 <p className="font-medium text-gray-700 mb-1">2. –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å –≤–∞—à–∏–º BOT_TOKEN:</p>
                 <code className="text-sm bg-gray-200 px-2 py-1 rounded block">
                   BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω_–æ—Ç_BotFather<br/>
                   SECRET_KEY=–≤–∞—à_—Å–µ–∫—Ä–µ—Ç–Ω—ã–π_–∫–ª—é—á<br/>
                   DEBUG=True
                 </code>
               </div>
               
               <div>
                 <p className="font-medium text-gray-700 mb-1">3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:</p>
                 <code className="text-sm bg-gray-200 px-2 py-1 rounded block">pip install -r requirements.txt</code>
               </div>
               
               <div>
                 <p className="font-medium text-gray-700 mb-1">4. –ü—Ä–∏–º–µ–Ω–∏—Ç–µ –º–∏–≥—Ä–∞—Ü–∏–∏:</p>
                 <code className="text-sm bg-gray-200 px-2 py-1 rounded block">python manage.py migrate</code>
               </div>
               
               <div>
                 <p className="font-medium text-gray-700 mb-1">5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:</p>
                 <code className="text-sm bg-gray-200 px-2 py-1 rounded block">python manage.py runserver 0.0.0.0:8001</code>
               </div>
             </div>
          </div>

          {/* –°—Å—ã–ª–∫–∏ */}
          <div className="border-t pt-6 mt-6">
            <div className="flex space-x-4">
              <a 
                href="/" 
                className="text-blue-500 hover:text-blue-600 text-sm font-medium"
              >
                ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
              </a>
              <a 
                href="/auth" 
                className="text-blue-500 hover:text-blue-600 text-sm font-medium"
              >
                –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—Ö–æ–¥–∞ ‚Üí
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 